# Makefile.in generated by automake 1.7.9 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.20 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KSNMP_INCLUDE = @KSNMP_INCLUDE@
KSNMP_LIBS = @KSNMP_LIBS@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TFTP_INCLUDE = @TFTP_INCLUDE@
TFTP_LIBS = @TFTP_LIBS@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = -I$(top_srcdir)/src/common $(all_includes) \
	-I$(top_builddir)/src/common


# these are the headers for your project
noinst_HEADERS = atmosphere.h devicewidget.h snmpthread.h interfacestats.h interfacethread.h cliwidget.h eventslogwidget.h

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

KDE_ICON = atmosphere

bin_PROGRAMS = atmosphere

#>- atmosphere_SOURCES = main.cpp atmosphere.cpp devicewidget.cpp snmpthread.cpp \
#>- 	interfacestats.cpp interfacethread.cpp cliwidget.cpp eventslogwidget.cpp uidevicewidget.ui \
#>- 	uiinterfacestats.ui uicliwidget.ui uisnmpsummary.ui uisnmpinterfaces.ui uisnmpip.ui \
#>- 	uisnmpipstats.ui uidevicelog.ui uieventslog.ui
#>+ 4
atmosphere_SOURCES=main.cpp atmosphere.cpp devicewidget.cpp snmpthread.cpp \
	interfacestats.cpp interfacethread.cpp cliwidget.cpp eventslogwidget.cpp  \
	     \
	   uidevicewidget.cpp uiinterfacestats.cpp uicliwidget.cpp uisnmpsummary.cpp uisnmpinterfaces.cpp uisnmpip.cpp uisnmpipstats.cpp uidevicelog.cpp uieventslog.cpp

atmosphere_LDFLAGS = $(KDE_RPATH) $(all_libraries)
atmosphere_LDADD = $(top_builddir)/src/common/libatmosphere.la $(KSNMP_LIBS) \
	$(LIB_KDEUI)

atmosphere_DEPENDENCIES = kcm/kcm_kcmatmosphere.la

# this is where the desktop file will go 
shelldesktopdir = $(kde_appsdir)/Utilities
shelldesktop_DATA = atmosphere.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/atmosphere
shellrc_DATA = atmosphereui.rc eventsrc

SUBDIRS = common kcm . atmosd
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = atmosphere$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_atmosphere_OBJECTS = main.$(OBJEXT) atmosphere.$(OBJEXT) \
	devicewidget.$(OBJEXT) snmpthread.$(OBJEXT) \
	interfacestats.$(OBJEXT) interfacethread.$(OBJEXT) \
	cliwidget.$(OBJEXT) eventslogwidget.$(OBJEXT)
#>- atmosphere_OBJECTS = $(am_atmosphere_OBJECTS)
#>+ 7
atmosphere_final_OBJECTS = atmosphere.all_cpp.o 
atmosphere_nofinal_OBJECTS = main.$(OBJEXT) atmosphere.$(OBJEXT) \
	devicewidget.$(OBJEXT) snmpthread.$(OBJEXT) \
	interfacestats.$(OBJEXT) interfacethread.$(OBJEXT) \
	cliwidget.$(OBJEXT) eventslogwidget.$(OBJEXT) uidevicewidget.$(OBJEXT) uiinterfacestats.$(OBJEXT) uicliwidget.$(OBJEXT) uisnmpsummary.$(OBJEXT) uisnmpinterfaces.$(OBJEXT) uisnmpip.$(OBJEXT) uisnmpipstats.$(OBJEXT) uidevicelog.$(OBJEXT) uieventslog.$(OBJEXT)
@KDE_USE_FINAL_FALSE@atmosphere_OBJECTS = $(atmosphere_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@atmosphere_OBJECTS = $(atmosphere_final_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/atmosphere.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/cliwidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/devicewidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/eventslogwidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/interfacestats.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/interfacethread.Po ./$(DEPDIR)/main.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/snmpthread.Po
#>+ 14
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/uidevicewidget.P $(DEPDIR)/uiinterfacestats.P $(DEPDIR)/uicliwidget.P $(DEPDIR)/uisnmpsummary.P $(DEPDIR)/uisnmpinterfaces.P $(DEPDIR)/uisnmpip.P $(DEPDIR)/uisnmpipstats.P $(DEPDIR)/uidevicelog.P $(DEPDIR)/uieventslog.P  $(DEPDIR)/atmosphere.all_cpp.P ./$(DEPDIR)/atmosphere.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/cliwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/devicewidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/eventslogwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/interfacestats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/interfacethread.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/snmpthread.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/uidevicewidget.P $(DEPDIR)/uiinterfacestats.P $(DEPDIR)/uicliwidget.P $(DEPDIR)/uisnmpsummary.P $(DEPDIR)/uisnmpinterfaces.P $(DEPDIR)/uisnmpip.P $(DEPDIR)/uisnmpipstats.P $(DEPDIR)/uidevicelog.P $(DEPDIR)/uieventslog.P ./$(DEPDIR)/atmosphere.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/cliwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/devicewidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/eventslogwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/interfacestats.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/interfacethread.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/snmpthread.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(atmosphere_SOURCES)
DATA = $(shelldesktop_DATA) $(shellrc_DATA)

HEADERS = $(noinst_HEADERS)


#>- RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
#>- 	ps-recursive install-info-recursive uninstall-info-recursive \
#>- 	all-recursive install-data-recursive install-exec-recursive \
#>- 	installdirs-recursive install-recursive uninstall-recursive \
#>- 	check-recursive installcheck-recursive
#>+ 5
RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive nmcheck-recursive bcheck-recursive
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.in Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(atmosphere_SOURCES)

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
atmosphere$(EXEEXT): $(atmosphere_OBJECTS) $(atmosphere_DEPENDENCIES) 
	@rm -f atmosphere$(EXEEXT)
	$(CXXLINK) $(atmosphere_LDFLAGS) $(atmosphere_OBJECTS) $(atmosphere_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atmosphere.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cliwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devicewidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventslogwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interfacestats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interfacethread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmpthread.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
shelldesktopDATA_INSTALL = $(INSTALL_DATA)
install-shelldesktopDATA: $(shelldesktop_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(shelldesktopdir)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(shelldesktopDATA_INSTALL) $$d$$p $(DESTDIR)$(shelldesktopdir)/$$f"; \
	  $(shelldesktopDATA_INSTALL) $$d$$p $(DESTDIR)$(shelldesktopdir)/$$f; \
	done

uninstall-shelldesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shelldesktop_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(shelldesktopdir)/$$f"; \
	  rm -f $(DESTDIR)$(shelldesktopdir)/$$f; \
	done
shellrcDATA_INSTALL = $(INSTALL_DATA)
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(shellrcdir)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(shellrcDATA_INSTALL) $$d$$p $(DESTDIR)$(shellrcdir)/$$f"; \
	  $(shellrcDATA_INSTALL) $$d$$p $(DESTDIR)$(shellrcdir)/$$f; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(shellrcdir)/$$f"; \
	  rm -f $(DESTDIR)$(shellrcdir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(shelldesktopdir) $(DESTDIR)$(shellrcdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

#>- install-data-am: install-shelldesktopDATA install-shellrcDATA
#>+ 1
install-data-am: install-kde-icons  install-shelldesktopDATA install-shellrcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-shelldesktopDATA uninstall-shellrcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-shelldesktopDATA uninstall-shellrcDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-recursive \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-shelldesktopDATA install-shellrcDATA \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	mostlyclean-recursive pdf pdf-am pdf-recursive ps ps-am \
	ps-recursive tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-recursive \
	uninstall-shelldesktopDATA uninstall-shellrcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/atmosphere.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
interfacestats.moc: $(srcdir)/interfacestats.h
	$(MOC) $(srcdir)/interfacestats.h -o interfacestats.moc

#>+ 2
mocs: interfacestats.moc

#>+ 3
devicewidget.moc: $(srcdir)/devicewidget.h
	$(MOC) $(srcdir)/devicewidget.h -o devicewidget.moc

#>+ 2
mocs: devicewidget.moc

#>+ 3
atmosphere.moc: $(srcdir)/atmosphere.h
	$(MOC) $(srcdir)/atmosphere.h -o atmosphere.moc

#>+ 2
mocs: atmosphere.moc

#>+ 3
cliwidget.moc: $(srcdir)/cliwidget.h
	$(MOC) $(srcdir)/cliwidget.h -o cliwidget.moc

#>+ 2
mocs: cliwidget.moc

#>+ 3
eventslogwidget.moc: $(srcdir)/eventslogwidget.h
	$(MOC) $(srcdir)/eventslogwidget.h -o eventslogwidget.moc

#>+ 2
mocs: eventslogwidget.moc

#>+ 3
clean-metasources:
	-rm -f  interfacestats.moc devicewidget.moc atmosphere.moc cliwidget.moc eventslogwidget.moc

#>+ 2
KDE_DIST=uisnmpsummary.ui uieventslog.ui atmosphere.desktop eventsrc hi32-app-atmosphere.png uiinterfacestats.ui uisnmpinterfaces.ui Makefile.in hi16-app-atmosphere.png uisnmpipstats.ui uicliwidget.ui uidevicelog.ui atmosphere.lsm uidevicewidget.ui atmosphereui.rc uisnmpip.ui 

#>+ 12
clean-ui:
	-rm -f \
	uidevicewidget.cpp uidevicewidget.h uidevicewidget.moc \
	uiinterfacestats.cpp uiinterfacestats.h uiinterfacestats.moc \
	uicliwidget.cpp uicliwidget.h uicliwidget.moc \
	uisnmpsummary.cpp uisnmpsummary.h uisnmpsummary.moc \
	uisnmpinterfaces.cpp uisnmpinterfaces.h uisnmpinterfaces.moc \
	uisnmpip.cpp uisnmpip.h uisnmpip.moc \
	uisnmpipstats.cpp uisnmpipstats.h uisnmpipstats.moc \
	uidevicelog.cpp uidevicelog.h uidevicelog.moc \
	uieventslog.cpp uieventslog.h uieventslog.moc 

#>+ 2
docs-am:

#>+ 10
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-atmosphere.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/atmosphere.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-atmosphere.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/atmosphere.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/atmosphere.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/atmosphere.png

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
atmosphere.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/atmosphere.cpp $(srcdir)/devicewidget.cpp $(srcdir)/snmpthread.cpp $(srcdir)/interfacestats.cpp $(srcdir)/interfacethread.cpp $(srcdir)/cliwidget.cpp $(srcdir)/eventslogwidget.cpp uidevicewidget.cpp uiinterfacestats.cpp uicliwidget.cpp uisnmpsummary.cpp uisnmpinterfaces.cpp uisnmpip.cpp uisnmpipstats.cpp uidevicelog.cpp uieventslog.cpp  uisnmpip.moc uidevicewidget.moc uisnmpipstats.moc uisnmpinterfaces.moc uidevicelog.moc cliwidget.moc uiinterfacestats.moc eventslogwidget.moc uisnmpsummary.moc uicliwidget.moc interfacestats.moc devicewidget.moc uieventslog.moc atmosphere.moc
	@echo 'creating atmosphere.all_cpp.cpp ...'; \
	rm -f atmosphere.all_cpp.files atmosphere.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> atmosphere.all_cpp.final; \
	for file in main.cpp atmosphere.cpp devicewidget.cpp snmpthread.cpp interfacestats.cpp interfacethread.cpp cliwidget.cpp eventslogwidget.cpp uidevicewidget.cpp uiinterfacestats.cpp uicliwidget.cpp uisnmpsummary.cpp uisnmpinterfaces.cpp uisnmpip.cpp uisnmpipstats.cpp uidevicelog.cpp uieventslog.cpp ; do \
	  echo "#include \"$$file\"" >> atmosphere.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> atmosphere.all_cpp.final; \
	done; \
	cat atmosphere.all_cpp.final atmosphere.all_cpp.files > atmosphere.all_cpp.cpp; \
	rm -f atmosphere.all_cpp.final atmosphere.all_cpp.files

#>+ 3
clean-final:
	-rm -f atmosphere.all_cpp.cpp

#>+ 3
final:
	$(MAKE) atmosphere_OBJECTS="$(atmosphere_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) atmosphere_OBJECTS="$(atmosphere_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) atmosphere_OBJECTS="$(atmosphere_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) atmosphere_OBJECTS="$(atmosphere_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 21
$(srcdir)/devicewidget.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
cliwidget.o: cliwidget.moc 
$(srcdir)/atmosphere.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
$(srcdir)/main.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
$(srcdir)/snmpthread.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
devicewidget.o: devicewidget.moc 
atmosphere.o: atmosphere.moc 
eventslogwidget.o: eventslogwidget.moc 
eventslogwidget.lo: eventslogwidget.moc 
nmcheck: 
devicewidget.lo: devicewidget.moc 
nmcheck-am: nmcheck
$(srcdir)/interfacethread.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
interfacestats.o: interfacestats.moc 
cliwidget.lo: cliwidget.moc 
interfacestats.lo: interfacestats.moc 
$(srcdir)/cliwidget.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
$(srcdir)/interfacestats.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
$(srcdir)/eventslogwidget.cpp: uidevicewidget.h uiinterfacestats.h uicliwidget.h uisnmpsummary.h uisnmpinterfaces.h uisnmpip.h uisnmpipstats.h uidevicelog.h uieventslog.h 
atmosphere.lo: atmosphere.moc 

#>+ 135
uidevicelog.cpp: $(srcdir)/uidevicelog.ui uidevicelog.h uidevicelog.moc
	rm -f uidevicelog.cpp
	echo '#include <kdialog.h>' > uidevicelog.cpp
	echo '#include <klocale.h>' >> uidevicelog.cpp
	$(UIC) -tr ${UIC_TR} -i uidevicelog.h $(srcdir)/uidevicelog.ui > uidevicelog.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uidevicelog.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uidevicelog,g" >> uidevicelog.cpp ;\
	rm -f uidevicelog.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uidevicelog.moc"' >> uidevicelog.cpp; else rm -f uidevicelog.cpp ; exit $$ret ; fi

uidevicelog.h: $(srcdir)/uidevicelog.ui
	$(UIC) -o uidevicelog.h $(srcdir)/uidevicelog.ui

uidevicelog.moc: uidevicelog.h
	$(MOC) uidevicelog.h -o uidevicelog.moc

uicliwidget.cpp: $(srcdir)/uicliwidget.ui uicliwidget.h uicliwidget.moc
	rm -f uicliwidget.cpp
	echo '#include <kdialog.h>' > uicliwidget.cpp
	echo '#include <klocale.h>' >> uicliwidget.cpp
	$(UIC) -tr ${UIC_TR} -i uicliwidget.h $(srcdir)/uicliwidget.ui > uicliwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uicliwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uicliwidget,g" >> uicliwidget.cpp ;\
	rm -f uicliwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uicliwidget.moc"' >> uicliwidget.cpp; else rm -f uicliwidget.cpp ; exit $$ret ; fi

uicliwidget.h: $(srcdir)/uicliwidget.ui
	$(UIC) -o uicliwidget.h $(srcdir)/uicliwidget.ui

uicliwidget.moc: uicliwidget.h
	$(MOC) uicliwidget.h -o uicliwidget.moc

uidevicewidget.cpp: $(srcdir)/uidevicewidget.ui uidevicewidget.h uidevicewidget.moc
	rm -f uidevicewidget.cpp
	echo '#include <kdialog.h>' > uidevicewidget.cpp
	echo '#include <klocale.h>' >> uidevicewidget.cpp
	$(UIC) -tr ${UIC_TR} -i uidevicewidget.h $(srcdir)/uidevicewidget.ui > uidevicewidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uidevicewidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uidevicewidget,g" >> uidevicewidget.cpp ;\
	rm -f uidevicewidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uidevicewidget.moc"' >> uidevicewidget.cpp; else rm -f uidevicewidget.cpp ; exit $$ret ; fi

uidevicewidget.h: $(srcdir)/uidevicewidget.ui
	$(UIC) -o uidevicewidget.h $(srcdir)/uidevicewidget.ui

uidevicewidget.moc: uidevicewidget.h
	$(MOC) uidevicewidget.h -o uidevicewidget.moc

uieventslog.cpp: $(srcdir)/uieventslog.ui uieventslog.h uieventslog.moc
	rm -f uieventslog.cpp
	echo '#include <kdialog.h>' > uieventslog.cpp
	echo '#include <klocale.h>' >> uieventslog.cpp
	$(UIC) -tr ${UIC_TR} -i uieventslog.h $(srcdir)/uieventslog.ui > uieventslog.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uieventslog.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uieventslog,g" >> uieventslog.cpp ;\
	rm -f uieventslog.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uieventslog.moc"' >> uieventslog.cpp; else rm -f uieventslog.cpp ; exit $$ret ; fi

uieventslog.h: $(srcdir)/uieventslog.ui
	$(UIC) -o uieventslog.h $(srcdir)/uieventslog.ui

uieventslog.moc: uieventslog.h
	$(MOC) uieventslog.h -o uieventslog.moc

uisnmpinterfaces.cpp: $(srcdir)/uisnmpinterfaces.ui uisnmpinterfaces.h uisnmpinterfaces.moc
	rm -f uisnmpinterfaces.cpp
	echo '#include <kdialog.h>' > uisnmpinterfaces.cpp
	echo '#include <klocale.h>' >> uisnmpinterfaces.cpp
	$(UIC) -tr ${UIC_TR} -i uisnmpinterfaces.h $(srcdir)/uisnmpinterfaces.ui > uisnmpinterfaces.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uisnmpinterfaces.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uisnmpinterfaces,g" >> uisnmpinterfaces.cpp ;\
	rm -f uisnmpinterfaces.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uisnmpinterfaces.moc"' >> uisnmpinterfaces.cpp; else rm -f uisnmpinterfaces.cpp ; exit $$ret ; fi

uisnmpinterfaces.h: $(srcdir)/uisnmpinterfaces.ui
	$(UIC) -o uisnmpinterfaces.h $(srcdir)/uisnmpinterfaces.ui

uisnmpinterfaces.moc: uisnmpinterfaces.h
	$(MOC) uisnmpinterfaces.h -o uisnmpinterfaces.moc

uiinterfacestats.cpp: $(srcdir)/uiinterfacestats.ui uiinterfacestats.h uiinterfacestats.moc
	rm -f uiinterfacestats.cpp
	echo '#include <kdialog.h>' > uiinterfacestats.cpp
	echo '#include <klocale.h>' >> uiinterfacestats.cpp
	$(UIC) -tr ${UIC_TR} -i uiinterfacestats.h $(srcdir)/uiinterfacestats.ui > uiinterfacestats.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uiinterfacestats.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uiinterfacestats,g" >> uiinterfacestats.cpp ;\
	rm -f uiinterfacestats.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uiinterfacestats.moc"' >> uiinterfacestats.cpp; else rm -f uiinterfacestats.cpp ; exit $$ret ; fi

uiinterfacestats.h: $(srcdir)/uiinterfacestats.ui
	$(UIC) -o uiinterfacestats.h $(srcdir)/uiinterfacestats.ui

uiinterfacestats.moc: uiinterfacestats.h
	$(MOC) uiinterfacestats.h -o uiinterfacestats.moc

uisnmpipstats.cpp: $(srcdir)/uisnmpipstats.ui uisnmpipstats.h uisnmpipstats.moc
	rm -f uisnmpipstats.cpp
	echo '#include <kdialog.h>' > uisnmpipstats.cpp
	echo '#include <klocale.h>' >> uisnmpipstats.cpp
	$(UIC) -tr ${UIC_TR} -i uisnmpipstats.h $(srcdir)/uisnmpipstats.ui > uisnmpipstats.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uisnmpipstats.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uisnmpipstats,g" >> uisnmpipstats.cpp ;\
	rm -f uisnmpipstats.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uisnmpipstats.moc"' >> uisnmpipstats.cpp; else rm -f uisnmpipstats.cpp ; exit $$ret ; fi

uisnmpipstats.h: $(srcdir)/uisnmpipstats.ui
	$(UIC) -o uisnmpipstats.h $(srcdir)/uisnmpipstats.ui

uisnmpipstats.moc: uisnmpipstats.h
	$(MOC) uisnmpipstats.h -o uisnmpipstats.moc

uisnmpsummary.cpp: $(srcdir)/uisnmpsummary.ui uisnmpsummary.h uisnmpsummary.moc
	rm -f uisnmpsummary.cpp
	echo '#include <kdialog.h>' > uisnmpsummary.cpp
	echo '#include <klocale.h>' >> uisnmpsummary.cpp
	$(UIC) -tr ${UIC_TR} -i uisnmpsummary.h $(srcdir)/uisnmpsummary.ui > uisnmpsummary.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uisnmpsummary.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uisnmpsummary,g" >> uisnmpsummary.cpp ;\
	rm -f uisnmpsummary.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uisnmpsummary.moc"' >> uisnmpsummary.cpp; else rm -f uisnmpsummary.cpp ; exit $$ret ; fi

uisnmpsummary.h: $(srcdir)/uisnmpsummary.ui
	$(UIC) -o uisnmpsummary.h $(srcdir)/uisnmpsummary.ui

uisnmpsummary.moc: uisnmpsummary.h
	$(MOC) uisnmpsummary.h -o uisnmpsummary.moc

uisnmpip.cpp: $(srcdir)/uisnmpip.ui uisnmpip.h uisnmpip.moc
	rm -f uisnmpip.cpp
	echo '#include <kdialog.h>' > uisnmpip.cpp
	echo '#include <klocale.h>' >> uisnmpip.cpp
	$(UIC) -tr ${UIC_TR} -i uisnmpip.h $(srcdir)/uisnmpip.ui > uisnmpip.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" uisnmpip.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_uisnmpip,g" >> uisnmpip.cpp ;\
	rm -f uisnmpip.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "uisnmpip.moc"' >> uisnmpip.cpp; else rm -f uisnmpip.cpp ; exit $$ret ; fi

uisnmpip.h: $(srcdir)/uisnmpip.ui
	$(UIC) -o uisnmpip.h $(srcdir)/uisnmpip.ui

uisnmpip.moc: uisnmpip.h
	$(MOC) uisnmpip.h -o uisnmpip.moc
